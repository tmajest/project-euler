problem: http://projecteuler.net/problem=28

43 44 45 46 47 48 49
42 21 22 23 24 25 26
41 20  7  8  9 10 27
40 19  6  1  2 11 28
39 18  5  4  3 12 29
38 17 16 15 14 13 30
37 36 35 34 33 32 31
 

 1 
 3  5  7  9     # 2
13 17 21 25     # 4
31 37 43 49     # 6

... etc (There's probably a closed form answer to this...)

- the top right corner of the grid, in terms of n (the width of the
  square grid) is n * n.

- So in a 1001 * 1001 grid, the largest number is 1001 * 1001 = 1002001

psuedo code:

total = 1
last = 1
skip = 2
while last < 10:
    curr_nums = range(last + skip, (skip + 1) ** 2 + 1, skip)
    print curr_nums
    total += sum(curr_nums)
    last = curr_nums[-1]
    skip += 2
print total








